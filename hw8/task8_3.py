# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере.
# Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит
# работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.


class IntException(Exception):
    def __init__(self, param):
        print('>> срабoтало исключение:')
        print(f'>> Недопустимое значение')
        self.txt = param


int_list = []


def int_list_input():
    while True:
        def stop_this():
            print(f'Скрипт завершён.')
            if not int_list:
                print('список пуст')
            else:
                print(f'Сформирован следующий список:')
                print(int_list)

        try:
            int_input = (input('Введите число и нажмите Enter (или просто нажмите Enter для выхода): '))
            if int_input.isdigit():
                int_list.append(int(int_input))
            elif int_input == '':
                stop_this()
                break
            else:
                raise IntException(int_input)
        except IntException as e:
            print(e)

            def once_again():
                y_or_n = input(f'Попробовать еще раз? Y/N ')
                if y_or_n.upper() == 'Y':
                    return int_list_input()
                elif y_or_n.upper() == 'N':
                    stop_this()
                else:
                    print(f'>> ответ не распознан')
                    return once_again()

            once_again()
            break
    return f''  # заглушка, чтобы не было None после вывода списка


print(int_list_input())
