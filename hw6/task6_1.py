# 1. Создать класс TrafficLight (светофор) и определить у него один атрибут color (цвет) и метод running (запуск).
# Атрибут реализовать как приватный.
# В рамках метода реализовать переключение светофора в режимы: красный, желтый, зеленый.
# Продолжительность первого состояния
# (красный) составляет 7 секунд, второго (желтый) — 2 секунды, третьего (зеленый) — на ваше усмотрение.
# Переключение между режимами должно осуществляться только в указанном порядке (красный, желтый, зеленый).
# Проверить работу примера, создав экземпляр и вызвав описанный метод.
# Задачу можно усложнить, реализовав проверку порядка режимов, и при его нарушении
# выводить соответствующее сообщение и завершать скрипт.
from time import sleep




# не придумал блока ожидания команды (нажатия клавиши на клавиатуре) на остановку цикла.
# Нашел такие способы:
# https://izziswift.com/how-to-kill-a-while-loop-with-a-keystroke/
# https://stackoverflow.com/questions/22391134/exiting-while-loop-by-pressing-enter-without-blocking-how-can-i-improve-this-me
# но из IDE они работают криво



class TrafficLight:
    __color = ['Красный', 'Желтый', 'Зеленый', 'Желтый']

    def running(self):
            i = 0
            j = 0
            while i < 4:
                if i + 1 - i != 1:  # Добавил проверку, но непонятно, как в этой логике поменяется порядок? :)
                    print(f'Светофор сломался?)')
                else:
                    print(TL.__color[i])
                    if i == 0:
                        sleep(7)
                    elif i == 1:
                        sleep(2)
                    elif i == 2:
                        sleep(5)
                    elif i == 3:
                        sleep(2)
                    i += 1
            else:
                j += 1



TL = TrafficLight()


def runner():
    print(f'Светофор заработал.')
    for j in range(0, int(input('Сколько раз сработает цикл красный-жёлтый-зелёный-желтый?\n'))):
        TL.running()


runner()


